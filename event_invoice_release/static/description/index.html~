<section class="oe_container">
    <div class="oe_row oe_spaced">
        <h2 class="oe_slogan">Professional high quality print process with Scribus</h2>
        <h3 class="oe_slogan">From any type of object, create nifty reports</h3>
        <div class="oe_span6">
            <div class="oe_demo oe_picture oe_screenshot">
                <img src="made-with1.jpg" alt="" />
            </div>
        </div>
        <div class="oe_span6">
            <p class='oe_mt32'>
                 This is a new report type for Odoo, the module is an extention 
                 that gives print designers a complement 
                 to other report types when they creates a new report. But its easy
                 even for non programmers to create reports using the separate GUI-client.                       
            </p>

            <p class='oe_mt32'>
<a href="http://scribus.net">Scribus</a> is a page layout program that supports professional publishing features,
such as CMYK colors, spot colors, ICC color management and versatile PDF creation.
            </p>
        </div>
    </div>
</section>


<section class="oe_container">
    <div class="oe_row oe_spaced">
        <h2 class="oe_slogan">Create Press-ready PDF</h2>
        <div class="oe_span6">
            <p class='oe_mt32'>
Scribus reliably exports high quality, "press-ready" PDF including advanced PDF 1.5 features, ISO compliant PDF/X-3 and ICC color managed PDFs.
This module uses the Scribus-sla-file as a template. The Scribus-file incorporate settings for the PDF-generation as long with the design. If you
need Crops or Bleed marks, you choose this when you create your template. 
<ul>
    <li>PDF 1.4 and PDF 1.5 handle transparency.</li>
    <li>PDF/X-1a specifies that all colors are CMYK or spot colors.</li>
    <li>PDF/X-3 tags all images with the right ICC profile and leaves the CMYK conversion to the RIP (Raster Images Processor) at the print office.</li>
    <li>PDF/X-1a and PDF/X-3 are based on PDF 1.3 which does not handle transparency.</li>
</ul>
</p>
</div>
        <div class="oe_span6">
       <div class="oe_demo oe_picture oe_screenshot">
                <img src="Markering_038.png" alt="" />
            </div>

        </div>
</div>
</section>

<section class="oe_container oe_dark">
    <div class="oe_row">
        <h2 class="oe_slogan">Design pages using special notation</h2>
        <div class="oe_span6">
      
            <div class="oe_demo oe_picture oe_screenshot">
                <img src="Markering_037.png" alt="" />
            </div>
            </div>
        <div class="oe_span6">
            <p class='oe_mt32'>
                This module uses email_template rendering notation; ${object.name} for including attributes from the database.
			  You can add Python style code, for example ${object.email or ''}. Use email attribute from object or, if there is 
			  nothing in email print an empty string.
			 When the template is ready you can
        upload it to the report-record (or include it in the xml-record if
        you are building a module). There is a test report action that
        also lists all fields for the choosen model. The report type "Scribus PDF" outputs PDF-file and "Scribus SLA" outputs 
        the rendered SLA-file. When using SLA output you can work with the ready Scribus-file before PDF-generation or printing. SLA-files contains only one instance of printed object. 
        </p>
        </div>
        
    </div>
    <div class="oe_row">
        <div class="oe_span12">
        
        <h3>Example of code for a module:</h3>
        <pre>
    &lt;report string="Sample Scribus" id="action_scribus_sample_report" model="res.partner" 
                            report_type="scribus_pdf" name="report_scribus.scribus_sample_report" /&gt;
    
    &lt;record id="action_scribus_sample_report" model="ir.actions.report.xml"&gt;
        &lt;field name="scribus_template" type="base64" file="report_scribus/sample.sla" /&gt;
    &lt;/record&gt;
        
        </pre>
        
        <p>
        This module needs Scribus-ng to be installed on the server (for Ubuntu:
        sudo add-apt-repository ppa:scribus/ppa<br/>
        sudo apt install scribus-ng)
                

            </p>
         
        </div>
</div>        
   
</section>


<section class="oe_container oe_separator">
</section>
